import { f32, i32, u32 } from '../../data/numeric.ts';
import { vec4f, vec4i, vec4u } from '../../data/vector.ts';
import type { F32, I32, U32 } from '../../data/wgslTypes.ts';

export const texelFormatToChannelType = {
  r8unorm: f32,
  r8snorm: f32,
  r8uint: u32,
  r8sint: i32,
  r16uint: u32,
  r16sint: i32,
  r16float: f32,
  rg8unorm: f32,
  rg8snorm: f32,
  rg8uint: u32,
  rg8sint: i32,
  r32uint: u32,
  r32sint: i32,
  r32float: f32,
  rg16uint: u32,
  rg16sint: i32,
  rg16float: f32,
  rgba8unorm: f32,
  'rgba8unorm-srgb': f32,
  rgba8snorm: f32,
  rgba8uint: u32,
  rgba8sint: i32,
  bgra8unorm: f32,
  'bgra8unorm-srgb': f32,
  rgb9e5ufloat: f32,
  rgb10a2uint: u32,
  rgb10a2unorm: f32,
  rg11b10ufloat: f32,
  rg32uint: u32,
  rg32sint: i32,
  rg32float: f32,
  rgba16uint: u32,
  rgba16sint: i32,
  rgba16float: f32,
  rgba32uint: u32,
  rgba32sint: i32,
  rgba32float: f32,
  stencil8: u32,
  depth16unorm: f32,
  depth24plus: f32,
  'depth24plus-stencil8': f32,
  depth32float: f32,
  'depth32float-stencil8': f32,
  'bc1-rgba-unorm': f32,
  'bc1-rgba-unorm-srgb': f32,
  'bc2-rgba-unorm': f32,
  'bc2-rgba-unorm-srgb': f32,
  'bc3-rgba-unorm': f32,
  'bc3-rgba-unorm-srgb': f32,
  'bc4-r-unorm': f32,
  'bc4-r-snorm': f32,
  'bc5-rg-unorm': f32,
  'bc5-rg-snorm': f32,
  'bc6h-rgb-ufloat': f32,
  'bc6h-rgb-float': f32,
  'bc7-rgba-unorm': f32,
  'bc7-rgba-unorm-srgb': f32,
  'etc2-rgb8unorm': f32,
  'etc2-rgb8unorm-srgb': f32,
  'etc2-rgb8a1unorm': f32,
  'etc2-rgb8a1unorm-srgb': f32,
  'etc2-rgba8unorm': f32,
  'etc2-rgba8unorm-srgb': f32,
  'eac-r11unorm': f32,
  'eac-r11snorm': f32,
  'eac-rg11unorm': f32,
  'eac-rg11snorm': f32,
  'astc-4x4-unorm': f32,
  'astc-4x4-unorm-srgb': f32,
  'astc-5x4-unorm': f32,
  'astc-5x4-unorm-srgb': f32,
  'astc-5x5-unorm': f32,
  'astc-5x5-unorm-srgb': f32,
  'astc-6x5-unorm': f32,
  'astc-6x5-unorm-srgb': f32,
  'astc-6x6-unorm': f32,
  'astc-6x6-unorm-srgb': f32,
  'astc-8x5-unorm': f32,
  'astc-8x5-unorm-srgb': f32,
  'astc-8x6-unorm': f32,
  'astc-8x6-unorm-srgb': f32,
  'astc-8x8-unorm': f32,
  'astc-8x8-unorm-srgb': f32,
  'astc-10x5-unorm': f32,
  'astc-10x5-unorm-srgb': f32,
  'astc-10x6-unorm': f32,
  'astc-10x6-unorm-srgb': f32,
  'astc-10x8-unorm': f32,
  'astc-10x8-unorm-srgb': f32,
  'astc-10x10-unorm': f32,
  'astc-10x10-unorm-srgb': f32,
  'astc-12x10-unorm': f32,
  'astc-12x10-unorm-srgb': f32,
  'astc-12x12-unorm': f32,
  'astc-12x12-unorm-srgb': f32,
  r16snorm: f32,
  r16unorm: f32,
  rg16unorm: f32,
  rg16snorm: f32,
  rgba16unorm: f32,
  rgba16snorm: f32,
} satisfies Record<GPUTextureFormat, U32 | I32 | F32>;

export type TexelFormatToChannelType = typeof texelFormatToChannelType;

export type ViewDimensionToDimension = {
  '1d': '1d';
  '2d': '2d';
  '2d-array': '2d';
  '3d': '3d';
  cube: '2d';
  'cube-array': '2d';
};

/**
 * https://www.w3.org/TR/WGSL/#storage-texel-formats
 */
export type StorageTextureFormats =
  | 'rgba8unorm'
  | 'rgba8snorm'
  | 'rgba8uint'
  | 'rgba8sint'
  | 'rgba16unorm'
  | 'rgba16snorm'
  | 'rgba16uint'
  | 'rgba16sint'
  | 'rgba16float'
  | 'rg8unorm'
  | 'rg8snorm'
  | 'rg8uint'
  | 'rg8sint'
  | 'rg16unorm'
  | 'rg16snorm'
  | 'rg16uint'
  | 'rg16sint'
  | 'rg16float'
  | 'r32uint'
  | 'r32sint'
  | 'r32float'
  | 'rg32uint'
  | 'rg32sint'
  | 'rg32float'
  | 'rgba32uint'
  | 'rgba32sint'
  | 'rgba32float'
  | 'bgra8unorm'
  | 'r8unorm'
  | 'r8snorm'
  | 'r8uint'
  | 'r8sint'
  | 'r16unorm'
  | 'r16snorm'
  | 'r16uint'
  | 'r16sint'
  | 'r16float'
  | 'rgb10a2unorm'
  | 'rgb10a2uint'
  | 'rg11b10ufloat';

export const texelFormatToDataType = {
  rgba8unorm: vec4f,
  rgba8snorm: vec4f,
  rgba8uint: vec4u,
  rgba8sint: vec4i,
  rgba16unorm: vec4f,
  rgba16snorm: vec4f,
  rgba16uint: vec4u,
  rgba16sint: vec4i,
  rgba16float: vec4f,
  rg8unorm: vec4f,
  rg8snorm: vec4f,
  rg8uint: vec4u,
  rg8sint: vec4i,
  rg16unorm: vec4f,
  rg16snorm: vec4f,
  rg16uint: vec4u,
  rg16sint: vec4i,
  rg16float: vec4f,
  r32uint: vec4u,
  r32sint: vec4i,
  r32float: vec4f,
  rg32uint: vec4u,
  rg32sint: vec4i,
  rg32float: vec4f,
  rgba32uint: vec4u,
  rgba32sint: vec4i,
  rgba32float: vec4f,
  bgra8unorm: vec4f,
  r8unorm: vec4f,
  r8snorm: vec4f,
  r8uint: vec4u,
  r8sint: vec4i,
  r16unorm: vec4f,
  r16snorm: vec4f,
  r16uint: vec4u,
  r16sint: vec4i,
  r16float: vec4f,
  rgb10a2unorm: vec4f,
  rgb10a2uint: vec4u,
  rg11b10ufloat: vec4f,

  stencil8: vec4u,
  depth16unorm: vec4f,
  depth24plus: vec4f,
  // not true
  'depth24plus-stencil8': vec4f,
  depth32float: vec4f,
  // not true
  'depth32float-stencil8': vec4f,
} as const;

export type TexelFormatToDataType = typeof texelFormatToDataType;

// TODO: use this for texture view validation
export const textureFormats = {
  // 8-bit formats
  'r8unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 1,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'r8snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 1,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'r8uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 1,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'r8sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 1,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },

  'rg8unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 2,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg8snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 2,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg8uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 2,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg8sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 2,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },

  'rgba8unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'rgba8unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: null,
  },
  'rgba8snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rgba8uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 4,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'rgba8sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 4,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },

  'bgra8unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only'],
  },
  'bgra8unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: null,
  },

  // 16-bit formats
  'r16unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 2,
    sampleTypes: ['unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'r16snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 2,
    sampleTypes: ['unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'r16uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 2,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'r16sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 2,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'r16float': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 2,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },

  'rg16unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg16snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg16uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 4,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg16sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 4,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg16float': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only', 'read-only'],
  },

  'rgba16unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rgba16snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rgba16uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 8,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'rgba16sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 8,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'rgba16float': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },

  // 32-bit formats
  'r32uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 4,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'r32sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 4,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'r32float': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },

  'rg32uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 8,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg32sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 8,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg32float': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },

  'rgba32uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 16,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'rgba32sint': {
    channelType: i32,
    vectorType: vec4i,
    texelSize: 16,
    sampleTypes: ['sint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },
  'rgba32float': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: false,
    canResolve: false,
    storageBindings: ['write-only', 'read-only', 'read-write'],
  },

  // Mixed component formats
  'rgb10a2uint': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 4,
    sampleTypes: ['uint'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: ['write-only', 'read-only'],
  },
  'rgb10a2unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only', 'read-only'],
  },
  'rg11b10ufloat': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: true,
    canBlend: true,
    canMultisample: true,
    canResolve: true,
    storageBindings: ['write-only', 'read-only'],
  },

  // Special formats
  'rgb9e5ufloat': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },

  // Depth/Stencil formats
  'stencil8': {
    channelType: u32,
    vectorType: vec4u,
    texelSize: 1,
    sampleTypes: ['uint'],
    aspects: ['stencil'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: null,
  },
  'depth16unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 2,
    sampleTypes: ['depth', 'unfilterable-float'],
    aspects: ['depth'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: null,
  },
  'depth24plus': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['depth', 'unfilterable-float'],
    aspects: ['depth'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: null,
  },
  'depth24plus-stencil8': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['depth', 'unfilterable-float'],
    aspects: ['depth', 'stencil'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: null,
  },
  'depth32float': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['depth', 'unfilterable-float'],
    aspects: ['depth'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: null,
  },
  'depth32float-stencil8': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 4,
    sampleTypes: ['depth', 'unfilterable-float'],
    aspects: ['depth', 'stencil'],
    canRenderAttachment: true,
    canBlend: false,
    canMultisample: true,
    canResolve: false,
    storageBindings: null,
  },

  // BC compressed formats
  'bc1-rgba-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc1-rgba-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc2-rgba-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc2-rgba-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc3-rgba-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc3-rgba-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc4-r-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc4-r-snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc5-rg-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc5-rg-snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc6h-rgb-ufloat': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc6h-rgb-float': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc7-rgba-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'bc7-rgba-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },

  // ETC2/EAC compressed formats
  'etc2-rgb8unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'etc2-rgb8unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'etc2-rgb8a1unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'etc2-rgb8a1unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'etc2-rgba8unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'etc2-rgba8unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'eac-r11unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'eac-r11snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 8,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'eac-rg11unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'eac-rg11snorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },

  // ASTC compressed formats
  'astc-4x4-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-4x4-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-5x4-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-5x4-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-5x5-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-5x5-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-6x5-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-6x5-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-6x6-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-6x6-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-8x5-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-8x5-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-8x6-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-8x6-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-8x8-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-8x8-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-10x5-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-10x5-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-10x6-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-10x6-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-10x8-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-10x8-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-10x10-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-10x10-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-12x10-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-12x10-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-12x12-unorm': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
  'astc-12x12-unorm-srgb': {
    channelType: f32,
    vectorType: vec4f,
    texelSize: 16,
    sampleTypes: ['float', 'unfilterable-float'],
    aspects: ['color'],
    canRenderAttachment: false,
    canBlend: false,
    canMultisample: false,
    canResolve: false,
    storageBindings: null,
  },
} as const satisfies Record<GPUTextureFormat, TextureFormatInfo>;

export type TextureFormatInfo = {
  readonly channelType: F32 | I32 | U32;
  readonly vectorType: typeof vec4f | typeof vec4i | typeof vec4u;
  readonly texelSize: number;
  readonly sampleTypes: readonly string[];
  readonly aspects: readonly string[];
  readonly canRenderAttachment: boolean;
  readonly canBlend: boolean;
  readonly canMultisample: boolean;
  readonly canResolve: boolean;
  readonly storageBindings: readonly string[] | null;
};

export type TextureFormats = typeof textureFormats;
